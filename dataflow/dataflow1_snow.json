{
	"name": "dataflow1_snow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "copyapitosql",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          data as (employee_age as short, employee_name as string, employee_salary as integer, id as short, profile_image as string)[],",
				"          message as string,",
				"          status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source1",
				"source1 foldDown(unroll(data),",
				"     mapColumn(",
				"          Id = data.id,",
				"          employee_name = data.employee_name,",
				"          employee_age = data.employee_age,",
				"          employee_salary = data.employee_salary",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 select(mapColumn(",
				"          ID = Id,",
				"          EMPLOYEE_NAME = employee_name,",
				"          EMPLOYEE_AGE = employee_age,",
				"          EMPLOYEE_SALARY = employee_salary",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 alterRow(upsertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as decimal(38,0),",
				"          EMPLOYEE_NAME as string,",
				"          EMPLOYEE_SALARY as decimal(38,0),",
				"          EMPLOYEE_AGE as decimal(38,0)",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['ID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ID,",
				"          EMPLOYEE_NAME,",
				"          EMPLOYEE_SALARY,",
				"          EMPLOYEE_AGE",
				"     )) ~> sink1"
			]
		}
	}
}